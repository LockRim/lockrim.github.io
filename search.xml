<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>AC2100的OpenWrt使用体验</title>
    <url>/2022/10/11/AC2100%E7%9A%84OpenWrt%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><img src="/2022/10/11/AC2100%E7%9A%84OpenWrt%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/101947495.jpg" class="" width="101947495">

<blockquote>
<p>pid: 101947495</p>
</blockquote>
<p>入手一台AC2100，打算刷入OpenWrt进行多拨，科学上网，以针对校园网只能2个设备的限制，提升上网体验。还有多设备之间互联，快乐冲浪。</p>
<p>我将从安装，配置和使用感受方面来总结</p>
<span id="more"></span>

<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="刷入breed固件"><a href="#刷入breed固件" class="headerlink" title="刷入breed固件"></a>刷入breed固件</h2><p>需要将路由器版本手动下降到2.0.7版本，下载地址：</p>
<p><a href="http://cdn.cnbj1.fds.api.mi-img.com/xiaoqiang/rom/rm2100/miwifi_rm2100_firmware_d6234_2.0.7.bin">红米AC2100</a> ，<a href="http://cdn.cnbj1.fds.api.mi-img.com/xiaoqiang/rom/r2100/miwifi_r2100_firmware_4b519_2.0.722.bin">小米AC2100</a></p>
<p>最好提前准备固件 <a href="https://openwrt.mpdn.fun:8443/?dir=lede/mtk/">BleachWrt</a></p>
<p>在系统界面进行固件降级 使用网线连接路由器，确保已连接上网络，该方法需要连网下载</p>
<p>请先将网址中的stok复制下来，将下列代码中CCCCCCCCCC进行替换，直接在网址栏中打开</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://192.168.31.1/cgi-bin/luci/;stok=CCCCCCCCCC/api/misystem/set_config_iotdev?bssid=Xiaomi&amp;user_id=longdike&amp;ssid=%0Acd%20%2Ftmp%0Acurl%20-o%20B%20-O%20https%3A%2F%2Fbreed.hackpascal.net%2Fbreed-mt7621-xiaomi-r3g.bin%20-k%0A%5B%20-z%20%22%24(sha256sum%20B%20%7C%20grep%20242d42eb5f5aaa67ddc9c1baf1acdf58d289e3f792adfdd77b589b9dc71eff85)%22%20%5D%20%7C%7C%20mtd%20-r%20write%20B%20Bootloader%0A</span><br></pre></td></tr></table></figure>

<p>运行后应该显示 {code:0}</p>
<p>观察到路由器系统指示灯（下面那个）从蓝变橘最后变蓝则成功</p>
<p>若没有请从新进入后台再次重复上面过程</p>
<p>无需检查坏块，现在的固件应该会自动跳过坏块部分（待定）</p>
<p>成功后拔掉电源，卡针插入reset孔，插入电源，直到系统指示灯闪烁蓝光，若失败请从新刷入breed</p>
<h2 id="刷入OpenWrt固件"><a href="#刷入OpenWrt固件" class="headerlink" title="刷入OpenWrt固件"></a>刷入OpenWrt固件</h2><p>浏览器输入192.168.1.1进入breed</p>
<p>推荐使用 BleachWrt 内置多种插件，无需自己设置</p>
<p>按照安装说明进行固件刷入，推荐使用精简版本</p>
<p>网线无需改为lan口，wan口一样可以刷入固件，环境变量必须设置</p>
<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="连网"><a href="#连网" class="headerlink" title="连网"></a>连网</h2><p>首先第一步，连接校园网，点开网络-DHCP&#x2F;DNS</p>
<p>将重绑定关闭 进行保存&amp;应用</p>
<h2 id="多拨配置"><a href="#多拨配置" class="headerlink" title="多拨配置"></a>多拨配置</h2><p>点开多线多拨</p>
<p>启用多线多拨，取消掉线检测，设置需要的接口数量</p>
<p>保存并应用，等待完成</p>
<p>点开接口，将新出现的接口全部设置为DHCP客户端，在高级设置中为每一个接口设置独立的网关跃点，保存后多拨设置完成</p>
<p>查看状态-负载均衡中接口是否同时在线</p>
<p>至此，多拨完成</p>
<p>可使用<a href="http://speedtest.cn/">speedtest</a>进行测速</p>
<h2 id="更新内核"><a href="#更新内核" class="headerlink" title="更新内核"></a>更新内核</h2><p>BleachWrt的内核版本是5.4.203 如果要opkg一些其他安装包会出现内核错误的提示，需要将内核进行更新</p>
<p><a href="https://downloads.openwrt.org/snapshots/targets/ramips/mt7621/packages/">openwrt下mt7621版本</a></p>
<p>找到kernel文件</p>
<p>下载后上传到路由&#x2F;tmp文件夹下，winSCP很好用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">opkg install /tmp/kernel_...</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure>

<p>安装后重启，系统概括中内核版本不变，但可以下载软件</p>
<h1 id="使用感受"><a href="#使用感受" class="headerlink" title="使用感受"></a>使用感受</h1><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><p>突破校园网的设备限制确实很爽，而且还能进行文件共享，无需文件互传就可以躺床上用平板看电脑上的电影咯</p>
<h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><p>不过AC2100设备性能限制，多拨和openclash不能同时使用 BitComet设置中</p>
<p>需要将UDP连接数减小才可以使用DHT下载文件</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>十分的好的软路由，❤来自🇨🇳</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>openwrt</tag>
        <tag>ac2100</tag>
      </tags>
  </entry>
  <entry>
    <title>Archlinux使用samba共享文件夹</title>
    <url>/2022/10/22/Archlinux%E4%BD%BF%E7%94%A8samba%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><img src="/2022/10/22/Archlinux%E4%BD%BF%E7%94%A8samba%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9/2022.jpg" class="" title="20221011_634553b6c4b21">

<blockquote>
<p>pid: <a href="https://www.pixiv.net/artworks/97603880">97603880</a></p>
</blockquote>
<p>记录一下使用samba共享时的一些情况</p>
<span id="more"></span>

<p>使用kde桌面 dolphin文件管理器</p>
<p>一般而言，samba是直接安装的，无需下载</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yay -S samba</span><br></pre></td></tr></table></figure>

<h1 id="1-设置用户组并配置smb-conf文件"><a href="#1-设置用户组并配置smb-conf文件" class="headerlink" title="1. 设置用户组并配置smb.conf文件"></a>1. 设置用户组并配置smb.conf文件</h1><p>1.创建用户分享文件夹</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo mkdir /var/lib/samba/usershares </span><br></pre></td></tr></table></figure>

<p>2.创建用户组</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo groupadd -r sambashare </span><br></pre></td></tr></table></figure>

<p>3.把目录的所有者改为root，把组改为sambashare</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo chown root:sambashare /var/lib/samba/usershares</span><br></pre></td></tr></table></figure>

<p>4.改变userhares目录的权限，使sambashare组的用户可以创建文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo chmod 1770 /var/lib/samba/usershares</span><br></pre></td></tr></table></figure>

<p>更改smb.conf文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/samba/smb.conf </span><br><span class="line">--------------------------------------------- </span><br><span class="line">[global]  </span><br><span class="line">usershare path = /var/lib/samba/usershares  </span><br><span class="line">usershare max shares = 100  </span><br><span class="line">usershare allow guests = yes  </span><br><span class="line">usershare owner only = no</span><br></pre></td></tr></table></figure>

<p>添加一个用户，记得更改名字，将会同时设置密码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo smbpasswd -a your_username</span><br></pre></td></tr></table></figure>

<p>将该用户添加到sambashare组</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo gpasswd sambashare -a your_username</span><br></pre></td></tr></table></figure>

<p>重启smb服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl restart smb.service nmb.service</span><br></pre></td></tr></table></figure>

<p>注销并重新进入系统</p>
<h1 id="2-利用Dolphin设置共享"><a href="#2-利用Dolphin设置共享" class="headerlink" title="2. 利用Dolphin设置共享"></a>2. 利用Dolphin设置共享</h1><p>打开dolphin，找到你需要设置的文件或文件夹，右键属性即可找到共享</p>
<p>启动服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl start smb </span><br></pre></td></tr></table></figure>

<p>加入自启动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl enable smb </span><br></pre></td></tr></table></figure>

<p>这样设置之后重启也会保存之前共享的文件夹了</p>
<h1 id="使用体验"><a href="#使用体验" class="headerlink" title="使用体验"></a>使用体验</h1><p>这下躺床上也可以用平板看电脑上下载的番剧咯</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>samba</tag>
        <tag>Arch</tag>
      </tags>
  </entry>
  <entry>
    <title>Next主题fa图标问题</title>
    <url>/2023/03/29/Next%E4%B8%BB%E9%A2%98fa%E5%9B%BE%E6%A0%87%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><img src="/2023/03/29/Next%E4%B8%BB%E9%A2%98fa%E5%9B%BE%E6%A0%87%E9%97%AE%E9%A2%98/fa.jpg" class="" title="fa">

<blockquote>
<p>pid: 106449882</p>
</blockquote>
<p>配置链接时发现没有哔哩哔哩图标问题</p>
<p>查找发现是fontawesome即fa图标库版本问题</p>
<p>现提供解决方案</p>
<span id="more"></span>

<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>Next内置的fa图标库中没有国内的大部分图标</p>
<p>以为fa是v5版本</p>
<p>网络上的解决方案是去阿里矢量图上下载但是感觉很麻烦</p>
<h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>其实我们完全可以通过更改CDN改变fa版本来解决</p>
<p>bilibili图标在v6版本中实际上是有的</p>
<p>更改主题配置文件<code>/blog/themes/next/_config.yml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">vendors:</span></span><br><span class="line">	<span class="attr">fontawesome:</span> <span class="string">https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css</span></span><br></pre></td></tr></table></figure>

<p>搜索如上的类似代码添加cdn即可解决</p>
]]></content>
      <categories>
        <category>主题</category>
      </categories>
      <tags>
        <tag>Next</tag>
        <tag>fontawesome</tag>
      </tags>
  </entry>
  <entry>
    <title>Steam游戏闪退问题</title>
    <url>/2023/04/03/Steam%E6%B8%B8%E6%88%8F%E9%97%AA%E9%80%80%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1> <img src="/2023/04/03/Steam%E6%B8%B8%E6%88%8F%E9%97%AA%E9%80%80%E9%97%AE%E9%A2%98/steam.jpg" class="" title="steam">

<blockquote>
<p>pid: <a href="https://www.pixiv.net/artworks/106421292">106421292</a></p>
</blockquote>
<p>在<code>Archlinux</code>安装steam</p>
<p>结果在运行游戏的时候出现打开游戏闪退的现象</p>
<p>检查发现是vulkan驱动问题</p>
<span id="more"></span>

<h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><p>yay下载steam时，自动下载的vulkan驱动因为排序如果不设置会自动下载amdvlk的驱动</p>
<p>可通过该命令查看已安装的驱动</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yay -Qs vulkan</span><br></pre></td></tr></table></figure>

<img src="/2023/04/03/Steam%E6%B8%B8%E6%88%8F%E9%97%AA%E9%80%80%E9%97%AE%E9%A2%98/image-20230403182107553.png" class="" title="image-20230403182107553">

<p>这是我的驱动列表</p>
<p>将多余的amd驱动卸载即可</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yay -R amdvlk lib32-amdvlk</span><br></pre></td></tr></table></figure>

<p>重新打开steam启动游戏查看</p>
]]></content>
      <categories>
        <category>配置</category>
      </categories>
      <tags>
        <tag>Steam</tag>
      </tags>
  </entry>
  <entry>
    <title>记录下mpv配置</title>
    <url>/2023/03/12/%E8%AE%B0%E5%BD%95%E4%B8%8Bmpv%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><img src="/2023/03/12/%E8%AE%B0%E5%BD%95%E4%B8%8Bmpv%E9%85%8D%E7%BD%AE/105632895_p0-16796593136082.png" class="" title="105632895_p0">

<blockquote>
<p>pid: <a href="https://www.pixiv.net/artworks/105632895">105632895</a></p>
</blockquote>
<p>现在主要使用archlinux，看番使用的是mpv</p>
<p>可自定义程度高，十分甚至九分的好用</p>
<p>把配置记录备份一下</p>
<span id="more"></span>

<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>配置打包链接：<a href="https://pan.baidu.com/s/1wqFnm9Jme_RIpXlCNw1glg?pwd=1234">百度云</a></p>
<p>linux下的文件路径 ~&#x2F;.config&#x2F;mpv</p>
<p><code>mpv.conf</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">############</span><br><span class="line"># 渲染相关 #</span><br><span class="line">############</span><br><span class="line">vo=gpu</span><br><span class="line">profile=gpu-hq</span><br><span class="line">gpu-api=vulkan</span><br><span class="line">icc-profile-auto=yes    		# 色彩管理</span><br><span class="line">video-output-levels=full		# RGB范围</span><br><span class="line"></span><br><span class="line">########</span><br><span class="line"># 视频 #</span><br><span class="line">########</span><br><span class="line">save-position-on-quit=yes				# 退出时保存当前的播放状态</span><br><span class="line">watch-later-options=start,vid,aid,sid   # 限制保存播放状态的属性列表</span><br><span class="line"># 补帧</span><br><span class="line">video-sync=display-resample</span><br><span class="line">interpolation=yes</span><br><span class="line">tscale=oversample   		# 设置`gpu-api=vulkan`不会掉帧  </span><br><span class="line"># hr-seek-framedrop=no        # [补帧时推荐设置为no] 跳转时允许丢帧，默认 yes 。禁用它利于修正音频延迟</span><br><span class="line"># 在开启精确搜索时可能会导致跳转的速度变慢  </span><br><span class="line"># 画质</span><br><span class="line">cscale=ewa_lanczossharp</span><br><span class="line">scale=ewa_lanczossharp</span><br><span class="line"></span><br><span class="line">#############</span><br><span class="line"># 硬解/软解 #</span><br><span class="line">#############</span><br><span class="line">hwdec=auto-copy-safe</span><br><span class="line"># hwdec=nvdec-copy</span><br><span class="line"># hwdec=no</span><br><span class="line">hwdec-codecs=all    # 尽可能所有格式先尝试硬解</span><br><span class="line"></span><br><span class="line">########</span><br><span class="line"># 字幕 #</span><br><span class="line">########</span><br><span class="line">sub-auto=fuzzy</span><br><span class="line">sub-file-paths=subs</span><br><span class="line">blend-subtitles=video   	# 字幕分辨率渲染同步</span><br><span class="line">slang=chi,zh-CN,sc,chs,zh-Hans,简,eng   # 自动加载简中字幕</span><br><span class="line"></span><br><span class="line">########</span><br><span class="line"># 缓存 #</span><br><span class="line">########</span><br><span class="line">cache=yes</span><br><span class="line">demuxer-max-bytes=250MiB		# 最大向后缓存大小（KiB或MiB）</span><br><span class="line">cache-on-disk=no			# 用内存而不是磁盘缓存</span><br><span class="line"># cache-secs=8s				# 缓存时间</span><br><span class="line"></span><br><span class="line">########</span><br><span class="line"># 音频 #</span><br><span class="line">########</span><br><span class="line">af=scaletempo2  	# 倍速情况下使用可提升音频质量</span><br><span class="line"></span><br><span class="line">########</span><br><span class="line"># 杂项 #</span><br><span class="line">########</span><br><span class="line">osc=no  			# 禁用内置osc</span><br><span class="line">no-border   		# 无边框</span><br><span class="line">load-stats-overlay=no   # 禁用内置stats.lua脚本</span><br><span class="line">hr-seek=yes			# 精确搜索</span><br></pre></td></tr></table></figure>

<p><code>input.conf</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 退出时保存播放进度 #</span><br><span class="line">q quit-watch-later</span><br><span class="line">CLOSE_WIN quit-watch-later</span><br><span class="line"></span><br><span class="line"># 视频控制 #</span><br><span class="line">LEFT			seek -5</span><br><span class="line">RIGHT			seek 5</span><br><span class="line">CTRL+LEFT		seek -30</span><br><span class="line">CTRL+RIGHT		seek 30</span><br><span class="line">SHIFT+LEFT		seek -1</span><br><span class="line">SHIFT+RIGHT		seek 1</span><br><span class="line">ALT+LEFT 		seek -10</span><br><span class="line">ALT+RIGHT		seek 10</span><br><span class="line"></span><br><span class="line"># 音量控制 #</span><br><span class="line">WHEEL_UP      add volume 2  	# 滚轮上加 2% 音量</span><br><span class="line">WHEEL_DOWN    add volume -2 	# 滚轮下减 2% 音量</span><br><span class="line">UP            add volume 5  	# 上方向加 5%</span><br><span class="line">DOWN          add volume -5 	# 下方向减 5%</span><br><span class="line"></span><br><span class="line"># 鼠标操作 #</span><br><span class="line">MBTN_LEFT 		ignore					#鼠标左键 无操作</span><br><span class="line">MBTN_LEFT_DBL 	cycle fullscreen		#左键双击 切换全屏</span><br><span class="line">MOUSE_BTN2      ignore                  #右键忽略</span><br><span class="line"></span><br><span class="line"># 倍速相关 #</span><br><span class="line">\ set speed 1.5     #播放速度设为1.5</span><br><span class="line">] add speed 0.1     #播放速度+0.1</span><br><span class="line">[ add speed -0.1	#播放速度-0.1</span><br><span class="line"></span><br><span class="line"># 章节相关 #</span><br><span class="line">PGUP add chapter -1					#视频上一章节</span><br><span class="line">PGDWN add chapter 1					#视频下一章节</span><br><span class="line"></span><br><span class="line"># 播放列表 #</span><br><span class="line">Ctrl+PGUP playlist-prev				#播放列表上一个</span><br><span class="line">Ctrl+PGDWN playlist-next			#播放列表下一个</span><br><span class="line"></span><br><span class="line"># 杂项 #</span><br><span class="line">t cycle ontop   # 置顶</span><br><span class="line">TAB script-binding stats/display-stats-toggle   #绑定TAB键为显示播放信息</span><br><span class="line">Ctrl+1 vf toggle vapoursynth=&quot;~~/vs/svpflow_std.vpy&quot;    #补帧脚本</span><br></pre></td></tr></table></figure>

<h1 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h1><h2 id="autoload脚本"><a href="#autoload脚本" class="headerlink" title="autoload脚本"></a>autoload脚本</h2><p><a href="https://github.com/mpv-player/mpv/blob/master/TOOLS/lua/autoload.lua">autoload</a></p>
<p>使用方法在其中有写</p>
<h2 id="vapoursynth脚本补帧"><a href="#vapoursynth脚本补帧" class="headerlink" title="vapoursynth脚本补帧"></a>vapoursynth脚本补帧</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yay -S vapoursynth</span><br><span class="line">yay -S mpv-git</span><br></pre></td></tr></table></figure>

<p>有安装顺序限制 使用mpv-git可以自动编译可vapoursynth的mpv</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yay -S vapoursynth-plugin-svpflow</span><br></pre></td></tr></table></figure>

<p>安装插件，以下是配置脚本，放在mpv&#x2F;vs&#x2F;svpflow_std.vpy</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">### svpflow补60帧，一般消耗，补偿帧为8位</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> vapoursynth <span class="keyword">as</span> vs</span><br><span class="line"><span class="keyword">from</span> vapoursynth <span class="keyword">import</span> core</span><br><span class="line"></span><br><span class="line">smoothfps_params = <span class="string">&quot;&#123;rate:&#123;num:60,den:1,abs:true&#125;,algo:21,gpuid:0,mask:&#123;area:100&#125;,scene:&#123;limits:&#123;m1:1800,m2:3600,scene:5200,zero:100,blocks:45&#125;&#125;&#125;&quot;</span></span><br><span class="line"><span class="comment">## rate后设定目标帧率，num/den的结果(分子分母最好使用整数，计算结果最好也是整数)：当abs:true时指定为具体帧数值，当abs:false时为补帧倍率（vfr视频请使用倍帧来避免报错弹出）</span></span><br><span class="line"><span class="comment">## gpuid用于指定哪张显卡辅助CPU加速，可用数值为 (默认)0/11/12/21。双显卡笔记本在使用外屏时若掉帧则尝试改为21</span></span><br><span class="line"></span><br><span class="line">super_params = <span class="string">&quot;&#123;pel:2,gpu:0,scale:&#123;up:2,down:4&#125;&#125;&quot;</span></span><br><span class="line">analyse_params = <span class="string">&quot;&#123;block:&#123;w:32,h:32,overlap:2&#125;,main:&#123;levels:4,search:&#123;type:4,distance:-8,coarse:&#123;type:4,distance:-5,bad:&#123;range:0&#125;&#125;&#125;,penalty:&#123;plevel:1.3,pzero:110,pnbour:75&#125;&#125;,refine:[&#123;thsad:200,search:&#123;type:4,distance:2&#125;&#125;]&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> container_fps &gt; <span class="number">32</span> :</span><br><span class="line">	<span class="keyword">raise</span> Warning(<span class="string">&quot;源帧率超过限制的范围，已临时禁用该脚本。&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">interpolate</span>(<span class="params">clip</span>) :</span><br><span class="line">	clip_f = clip.resize.Bilinear(<span class="built_in">format</span>=vs.YUV420P8)</span><br><span class="line"></span><br><span class="line">	<span class="built_in">super</span> = core.svp1.Super(clip_f, super_params)</span><br><span class="line">	vectors = core.svp1.Analyse(<span class="built_in">super</span>[<span class="string">&quot;clip&quot;</span>], <span class="built_in">super</span>[<span class="string">&quot;data&quot;</span>], clip_f, analyse_params)</span><br><span class="line">	smooth = core.svp2.SmoothFps(clip, <span class="built_in">super</span>[<span class="string">&quot;clip&quot;</span>], <span class="built_in">super</span>[<span class="string">&quot;data&quot;</span>], vectors[<span class="string">&quot;clip&quot;</span>], vectors[<span class="string">&quot;data&quot;</span>], smoothfps_params, src=clip_f, fps=container_fps)</span><br><span class="line">	assume = core.std.AssumeFPS(smooth, fpsnum=smooth.fps_num, fpsden=smooth.fps_den)</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> assume</span><br><span class="line"></span><br><span class="line">interpolate(video_in).set_output()</span><br></pre></td></tr></table></figure>

<h2 id="thumbfast-略缩图脚本"><a href="#thumbfast-略缩图脚本" class="headerlink" title="thumbfast 略缩图脚本"></a>thumbfast 略缩图脚本</h2><img src="/2023/03/12/%E8%AE%B0%E5%BD%95%E4%B8%8Bmpv%E9%85%8D%E7%BD%AE/2023-04-05_12-54.png" class="" title="2023-04-05_12-54">

<p>通过该脚本可以为视频生成略缩图</p>
<p>以下是项目地址</p>
<p><a href="https://github.com/po5/thumbfast">https://github.com/po5/thumbfast</a></p>
<p>注意该项目需要在<code>mpv.conf</code>中添加osc&#x3D;no并配置支持该插件的osc才可运行</p>
<p>本人使用MPV-lazy的<a href="https://github.com/hooke007/MPV_lazy/blob/main/portable_config/scripts/osc_plus.lua">osc_plus脚本</a></p>
<p>并配合其配套的<a href="https://github.com/hooke007/MPV_lazy/blob/main/portable_config/script-opts/osc.conf">osc配置文件</a></p>
<p>需要注意的是这俩文件需改为同一文件名</p>
<h2 id="Playlistmanager"><a href="#Playlistmanager" class="headerlink" title="Playlistmanager"></a>Playlistmanager</h2><p>管理播放列表的插件</p>
<p><a href="https://github.com/jonniek/mpv-playlistmanager">Playlistmanager</a></p>
<p>这里说下相关的配置更改</p>
<p><code>script-opt/playlistmanager.conf</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#playlist ass style overrides</span><br><span class="line">#example &#123;\fnUbuntu\fs10\b0\bord1&#125; equals: font=Ubuntu, size=10, bold=no, border=1</span><br><span class="line">#read http://docs.aegisub.org/3.2/ASS_Tags/ for reference of tags</span><br><span class="line">#no values defaults to OSD settings in mpv.conf</span><br><span class="line">style_ass_tags=&#123;\fn汉仪正圆\fs17\b1\bord1&#125;</span><br></pre></td></tr></table></figure>

<p>⬆️这里是更改显示的字体，字号，粗细，边框</p>
<p>根据自身需求更改即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#slice long filenames, and how many chars to show</span><br><span class="line">slice_longfilenames=yes</span><br><span class="line">slice_longfilenames_amount=80</span><br></pre></td></tr></table></figure>

<p>⬆️这里是限制文件名的长度，避免过长</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#Playlist file templates</span><br><span class="line">#%pos = position of file with leading zeros</span><br><span class="line">#%name = title or name of file</span><br><span class="line">#%N = newline</span><br><span class="line">#you can also use the ass tags mentioned above. For example:</span><br><span class="line">#  selected_file=&#123;\c&amp;HFF00FF&amp;&#125;➔ %name   | to add a color for selected file. However, if you</span><br><span class="line">#  use ass tags you need to reset them for every line (see https://github.com/jonniek/mpv-playlistmanager/issues/20)</span><br><span class="line">normal_file=&#123;\c&amp;HFFFFFF&amp;&#125;○ %name</span><br><span class="line">hovered_file=&#123;\c&amp;H33FFFF&amp;&#125;● %name</span><br><span class="line">selected_file=&#123;\c&amp;H00BFFF&amp;&#125;➔ %name</span><br><span class="line">playing_file=&#123;\c&amp;HAAAAAA&amp;&#125;▷ %name</span><br><span class="line">playing_hovered_file=&#123;\c&amp;H00FF00&amp;&#125;▶ %name</span><br><span class="line">playing_selected_file=&#123;\c&amp;HFFFF00&amp;&#125;➤ %name</span><br></pre></td></tr></table></figure>

<p>⬆️这里是可以修改相关操作的样式，按照说明我增加了颜色相关设置</p>
<h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><blockquote>
<p>[<a href="https://vcb-s.com/archives/7594">VCB-Studio 科普教程 2.3] 跨平台播放器 mpv 配置入门</a></p>
<p><a href="https://github.com/hooke007/MPV_lazy">MPV_lazy</a></p>
</blockquote>
]]></content>
      <categories>
        <category>配置</category>
      </categories>
      <tags>
        <tag>mpv</tag>
      </tags>
  </entry>
  <entry>
    <title>Rime-ice输入法安装</title>
    <url>/2023/04/06/Rime-ice%E8%BE%93%E5%85%A5%E6%B3%95%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><img src="/2023/04/06/Rime-ice%E8%BE%93%E5%85%A5%E6%B3%95%E5%AE%89%E8%A3%85/rime.jpg" class="" title="rime">

<blockquote>
<p>pid: 106809212</p>
</blockquote>
<p>由于四叶草许久没更新，所以换了个输入法</p>
<p>在Arch Linux上安装<code>雾凇拼音</code>输入法</p>
<span id="more"></span>

<h1 id="安装与配置"><a href="#安装与配置" class="headerlink" title="安装与配置"></a>安装与配置</h1><p><strong>预置</strong>的配置文件和词库均位于<code>/usr/share/rime-data/</code>当中，需Root权限；</p>
<p><strong>用户</strong>的配置文件位于以下目录，视你安装的输入法框架（Fcitx或IBUS）及其版本而定：</p>
<ul>
<li><code>~/.config/fcitx/rime</code>（Fcitx4）</li>
<li><code>~/.local/share/fcitx5</code>（Fcitx5）</li>
<li><code>~/.config/ibus/rime</code>（IBUS）</li>
</ul>
<ol>
<li>通过以下命令安装 Rime 输入法：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yay -S fcitx5-im fcitx5-chinese-addons fcitx5-rime rime-ice</span><br></pre></td></tr></table></figure>

<ol start="2">
<li><p>设置环境变量。通过 <code>vim</code> 编辑文件 <code>/etc/environment</code>：</p>
<p>在文件中加入以下内容并保存退出：</p>
</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GTK_IM_MODULE=fcitx</span><br><span class="line">QT_IM_MODULE=fcitx</span><br><span class="line">XMODIFIERS=@im=fcitx</span><br><span class="line">SDL_IM_MODULE=fcitx</span><br><span class="line">GLFW_IM_MODULE=ibus</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>创建ice的配置文件：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> ~/.local/share/fcitx5/rime <span class="comment"># 创建 rime 目录</span></span><br><span class="line">vim ~/.local/share/fcitx5/rime/default.custom.yaml</span><br></pre></td></tr></table></figure>

<p>输入以下内容</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">patch:</span></span><br><span class="line">  <span class="attr">&quot;menu/page_size&quot;:</span> <span class="number">5</span>  <span class="comment">#候选词</span></span><br><span class="line">  <span class="attr">schema_list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">schema:</span> <span class="string">rime_ice</span></span><br></pre></td></tr></table></figure>

<p>保存并退出</p>
<ol start="4">
<li><p>右键输入法图标，重新启动或重新部署即可启用雾凇拼音输入法</p>
</li>
<li><p>（可选）增加萌娘百科词库</p>
</li>
</ol>
<p>雾凇拼音取消了对萌娘词库的支持，如果需要得自己添加</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yay -S fcitx5-pinyin-moegirl-rime</span><br></pre></td></tr></table></figure>

<p>安装完成之后将配置复制到个人配置目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> /usr/share/rime-data/rime_ice.dict.yaml ~/.local/share/fcitx5/rime/rime_ice.dict.yaml</span><br></pre></td></tr></table></figure>

<p>打开配置文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">code ~/.local/share/fcitx5/rime/rime_ice.dict.yaml</span><br></pre></td></tr></table></figure>

<p>根据提示在<code>import_tables:</code>中添加词库</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">import_tables:</span></span><br><span class="line">  <span class="string">...</span></span><br><span class="line">  <span class="string">...</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">moegirl</span></span><br></pre></td></tr></table></figure>

<ol start="6">
<li>尝试输入中文</li>
</ol>
<h1 id="使用体验"><a href="#使用体验" class="headerlink" title="使用体验"></a>使用体验</h1><p>更多的词库，更快的输入速度</p>
]]></content>
      <categories>
        <category>配置</category>
      </categories>
      <tags>
        <tag>雾凇拼音</tag>
        <tag>rime-ice</tag>
        <tag>Arch</tag>
      </tags>
  </entry>
  <entry>
    <title>在KDE下使用Wallpaper Engine</title>
    <url>/2023/04/19/%E5%9C%A8linux%E4%B8%8B%E4%BD%BF%E7%94%A8Wallpaper-Engine/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><img src="/2023/04/19/%E5%9C%A8linux%E4%B8%8B%E4%BD%BF%E7%94%A8Wallpaper-Engine/104696295_p0.png" class="" title="104696295_p0">

<blockquote>
<p>pid：<a href="https://www.pixiv.net/artworks/104696295">104696295</a></p>
</blockquote>
<p>尝试在linux下使用Wallpaper Engine，但是并不能控制桌面</p>
<p>找到了一个插件可以做到桌面播放Wallpaper Engine中的视频</p>
<span id="more"></span>

<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>以下是官方地址：</p>
<p><a href="https://github.com/catsout/wallpaper-engine-kde-plugin">wallpaper-engine-kde-plugin</a></p>
<p>其中有相关操作说明，这里给下部分汉化和相关问题解决</p>
<h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><p>Arch:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S extra-cmake-modules plasma-framework gst-libav base-devel mpv-git python-websockets qt5-declarative qt5-websockets qt5-webchannel vulkan-headers cmake</span><br></pre></td></tr></table></figure>

<p>本人使用arch与mpv-git</p>
<h2 id="构建与安装"><a href="#构建与安装" class="headerlink" title="构建与安装"></a>构建与安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Download source</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/catsout/wallpaper-engine-kde-plugin.git</span><br><span class="line"><span class="built_in">cd</span> wallpaper-engine-kde-plugin</span><br><span class="line"></span><br><span class="line"><span class="comment"># Download submodule (glslang)</span></span><br><span class="line">git submodule update --init</span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure</span></span><br><span class="line"><span class="comment"># &#x27;USE_PLASMAPKG=ON&#x27;: using plasmapkg2 tool to install plugin</span></span><br><span class="line"><span class="built_in">mkdir</span> build &amp;&amp; <span class="built_in">cd</span> build</span><br><span class="line">cmake .. -DUSE_PLASMAPKG=ON</span><br><span class="line"></span><br><span class="line"><span class="comment"># Build</span></span><br><span class="line">make -j<span class="variable">$nproc</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Install package (ignore if USE_PLASMAPKG=OFF for system-wide installation)</span></span><br><span class="line">make install_pkg</span><br><span class="line"><span class="comment"># install lib</span></span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>

<p>note：</p>
<p>这一过程会安装上相关的插件，更新也需运行上方的命令</p>
<h2 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h2><ol>
<li>删除该文件中列出的文件 <code>wallpaper-engine-kde-plugin/build/install_manifest.txt</code></li>
<li><code>plasmapkg2 -r ~/.local/share/plasma/wallpapers/com.github.casout.wallpaperEngineKde</code></li>
</ol>
<h1 id="使用相关"><a href="#使用相关" class="headerlink" title="使用相关"></a>使用相关</h1><ol>
<li><p>需要安装steam</p>
</li>
<li><p>桌面右键配置桌面，选择相关插件</p>
<p>选择Wallpaper Engine下载目录，一般默认<code>~/.local/share/Steam</code></p>
</li>
</ol>
<h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><ol>
<li><p>scene场景虽然可以播放但是并不稳定，最好还是用video</p>
</li>
<li><p>重启KDE桌面的命令为</p>
<p><code>systemctl --user restart plasma-plasmashell.service</code></p>
</li>
<li><p>使用mpv进行播放会有更好的体验</p>
</li>
<li><p>没找到循环播放的选项，测试发现mpv可以循环</p>
</li>
</ol>
<h2 id="崩溃之后的处理"><a href="#崩溃之后的处理" class="headerlink" title="崩溃之后的处理"></a>崩溃之后的处理</h2><ul>
<li>在<code>~/.config/plasma-org.kde.plasma.desktop-appletsrc</code>文件中删除<code>WallpaperSource</code>这一行</li>
<li>重启KDE桌面</li>
</ul>
<h2 id="设置后桌面黑屏"><a href="#设置后桌面黑屏" class="headerlink" title="设置后桌面黑屏"></a>设置后桌面黑屏</h2><p>缺少<a href="https://wiki.archlinux.org/title/GStreamer">gstreamer</a>相关解码器</p>
<p>下载安装后重启即可</p>
<h1 id="使用体验"><a href="#使用体验" class="headerlink" title="使用体验"></a>使用体验</h1><p>在linux上成功使用Wallpaper Engine</p>
<p>在只有桌面的情况下自动熄屏失效</p>
<p>会略微增加发热</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>KDE</tag>
        <tag>Wallpaper Engine</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Arch系统转移</title>
    <url>/2023/05/22/Arch%E7%B3%BB%E7%BB%9F%E8%BD%AC%E7%A7%BB/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><img src="/2023/05/22/Arch%E7%B3%BB%E7%BB%9F%E8%BD%AC%E7%A7%BB/103842593_p0.png" class="" title="103842593_p0">

<blockquote>
<p>pid：103842593</p>
</blockquote>
<p>因为一开始给Arch的空间比较小</p>
<p>很快就不够用了</p>
<p>所以做了个系统迁移的教程</p>
<p>参考自 <a href="https://wiki.archlinux.org/title/Migrate_installation_to_new_hardware">将安装迁移到新硬件（ArchWiki）</a></p>
<span id="more"></span>

<h1 id="前置工作"><a href="#前置工作" class="headerlink" title="前置工作"></a>前置工作</h1><ul>
<li><p>需要U盘安装Arch系统</p>
<p><a href="https://mirrors.ustc.edu.cn/">中科大镜像</a></p>
</li>
<li><p>系统转移到的空间 &gt; 转移前的空间</p>
</li>
</ul>
<h1 id="迁移工作"><a href="#迁移工作" class="headerlink" title="迁移工作"></a>迁移工作</h1><h2 id="使用dd进行系统迁移"><a href="#使用dd进行系统迁移" class="headerlink" title="使用dd进行系统迁移"></a>使用<code>dd</code>进行系统迁移</h2><p><a href="https://wiki.archlinux.org/title/Dd#Disk_cloning_and_restore">dd（ArchWiki）</a></p>
<p>假设从<code>/dev/sda1</code>到<code>/dev/sdb1</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/sda1 of=/dev/sdb1 bs=64K conv=noerror,<span class="built_in">sync</span> status=progress</span><br></pre></td></tr></table></figure>

<ul>
<li><p>注意<code>of</code>的文件目录</p>
</li>
<li><p>使用<code>df</code>&#x2F;<code>fdisk -l</code>命令查看硬盘</p>
</li>
<li><p><strong>注意这会将UUID也一起复制</strong>，在同一硬盘迁移中需更改UUID值</p>
</li>
</ul>
<h2 id="更新fstab"><a href="#更新fstab" class="headerlink" title="更新fstab"></a>更新fstab</h2><p>挂载<code>/mnt</code>分区，<code>EFI</code>分区，<code>swap</code>分区</p>
<p>更新fstab</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">genfstab -U /mnt &gt; /mnt/etc/fstab</span><br></pre></td></tr></table></figure>

<h2 id="重新生成内核镜像"><a href="#重新生成内核镜像" class="headerlink" title="重新生成内核镜像"></a>重新生成内核镜像</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkinitcpio -P</span><br></pre></td></tr></table></figure>

<h1 id="相关错误"><a href="#相关错误" class="headerlink" title="相关错误"></a>相关错误</h1><ul>
<li><p>更新UUID值</p>
</li>
<li><p>使用btrfs文件系统没有更新所以在dolphin中没有扩大</p>
<p>使用以下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">btrfs filesystem resize max /</span><br></pre></td></tr></table></figure></li>
</ul>
<h1 id="后言"><a href="#后言" class="headerlink" title="后言"></a>后言</h1><p>好评如潮，♥️来自🇨🇳</p>
<p>Linux空间大了好多真是舒服啊</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Arch</tag>
      </tags>
  </entry>
</search>
